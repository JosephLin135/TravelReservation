<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="com.cs336.pkg.ApplicationDB" %>
<%@ page import="java.sql.Connection" %>
<%@ page import="java.sql.Statement" %>
<%@ page import="java.sql.ResultSet" %>
<%@ page import="java.sql.SQLException" %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Landing Page</title>
</head>
<body>
<%
    // Check if the user is logged in and if the role is admin
    if (session.getAttribute("user") == null || session.getAttribute("role") == null || !session.getAttribute("role").equals("admin")) {
        response.sendRedirect("AdminLogin.jsp");  // Redirect to login if not logged in or not an admin
        return;
    }
%>

<p>Welcome <%= session.getAttribute("user") %></p>
<p><strong>* ONLY PICK ONE OPTION AT A TIME *</strong></p>
<p style="float: right;"><a href="AdminLogout.jsp">Log out</a></p>
<br>

<!-- Link to Admin Operations page -->
<a href="AdminOperations.jsp"><button>Go to Admin Operations</button></a>
<br><br>

<!-- Flight Log Form -->
<form action="AdminFlightLog.jsp" method="POST">
    <fieldset>
        <legend>Flight Log</legend>
        Retrieve list of all flights for an airport:<br>
        <input type="text" name="airport_id" placeholder="Enter Airport ID" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>
<br>

<!-- Sales Report Form -->
<form action="AdminSalesReport.jsp" method="POST">
    <fieldset>
        <legend>Sales Report</legend>
        Sales report for all tickets with PURCHASE DATE in the month of:<br>
        <small>(Format: 01 = January, 12 = December)</small><br>
        <input type="text" name="month" placeholder="Enter Month" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>
<br>

<!-- Flight Reservations Form -->
<form action="AdminFlightReservations.jsp" method="POST">
    <fieldset>
        <legend>Flight Reservations</legend>
        Retrieve list of all reservations by flight number:<br>
        <input type="text" name="airline_id" placeholder="Enter Airline ID" required><br>
        <input type="text" name="aircraft_id" placeholder="Enter Aircraft ID" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>
<br>

<!-- Revenue by Flight Form -->
<form action="AdminRevByFlight.jsp" method="POST">
    <fieldset>
        <legend>Revenue by Flight</legend>
        Revenue generated by flight:<br>
        <input type="text" name="airline_id" placeholder="Enter Airline ID" required><br>
        <input type="text" name="aircraft_id" placeholder="Enter Aircraft ID" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>
<br>

<!-- Revenue by Airline Form -->
<form action="AdminRevByAirline.jsp" method="POST">
    <fieldset>
        <legend>Revenue by Airline</legend>
        Revenue generated by airline:<br>
        <input type="text" name="airline_id" placeholder="Enter Airline ID" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>
<br>

<!-- Revenue by Customer Form -->
<form action="AdminRevByCustomer.jsp" method="POST">
    <fieldset>
        <legend>Revenue by Customer</legend>
        Revenue generated by customer:<br>
        <input type="text" name="userid" placeholder="Enter Customer Username" required>
        <input type="submit" value="Retrieve">
    </fieldset>
</form>

<!-- Button to trigger displaying most active flights -->
<form method="GET">
    <button type="submit" name="viewTopFlights" value="true">View Most Active Flights</button>
</form>

<%
    // Check if the admin wants to view the most active flights
    if ("true".equals(request.getParameter("viewTopFlights"))) {
        // Handling the Top Active Flights Query
        ApplicationDB db = new ApplicationDB();
        Connection con = db.getConnection();
        Statement stmt = con.createStatement();
        ResultSet rs1;

        try {
            // Query to fetch the most active flights
            String query = "SELECT t.airline_id, t.aircraft_id, f.dep_date, COUNT(*) AS tickets_sold " +
                           "FROM tickets t " +
                           "JOIN flights f ON t.airline_id = f.airline_id " +
                           "AND t.aircraft_id = f.aircraft_id " +
                           "AND t.d_date = f.dep_date " +
                           "GROUP BY t.airline_id, t.aircraft_id, f.dep_date " +
                           "ORDER BY tickets_sold DESC";
            rs1 = stmt.executeQuery(query);

            // Display the results in a table format
            out.println("<h3>Most Active Flights</h3>");
            out.println("<table border='1'>");
            out.println("<tr><th>Airline ID</th><th>Aircraft ID</th><th>Departure Date</th><th>Tickets Sold</th></tr>");

            // Looping through the result set to display each active flight
            while (rs1.next()) {
                out.println("<tr>");
                out.println("<td>" + rs1.getString("airline_id") + "</td>");
                out.println("<td>" + rs1.getString("aircraft_id") + "</td>");
                out.println("<td>" + rs1.getDate("dep_date") + "</td>");
                out.println("<td>" + rs1.getInt("tickets_sold") + "</td>");
                out.println("</tr>");
            }

            out.println("</table>");
        } catch (SQLException e) {
            out.println("Error: " + e.getMessage());
        } finally {
            try {
                if (stmt != null) stmt.close();
                if (con != null) con.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
%>

</body>
</html>
